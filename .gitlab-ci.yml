# stages:
#   - allure-start
#   - mobile 
#   - allure-stop
#
# variables:
#   ALLURE_LAUNCH_NAME: "${CI_PROJECT_NAME} - ${CI_COMMIT_SHORT_SHA}"
#   ALLURE_LAUNCH_TAGS: "regular, ${CI_COMMIT_REF_NAME}, ${GITLAB_USER_EMAIL}"
#   ALLURE_TESTPLAN_PATH: ./testplan.json
#   ALLURE_RESULTS: ./allure-results
#
# # вынес базовые команды для всех тестов
# .tests:
#   image: nestandarta/git_python3.8_ubuntu
#   allow_failure: true
#   before_script:
#     - rm -R api
#     - git submodule update --recursive --remote
#     - python3 -m pip install --upgrade pip
#     - pip install -r requirements.txt
#   artifacts:
#     paths:
#       - allure-results/
#     when: always
#     expire_in: 1 day
#   rules:
#     - if: $CI_PIPELINE_SOURCE != "push"
# #      when: never
# #  after_script:
# #    - chmod +x ./allurectl
# #    - ./allurectl upload ./allure-results
#
# #allure-start:
# #  stage: allure-start
# #  image: nestandarta/git_python3.8_ubuntu
# #  before_script:
# #    - rm -R api
# #    - git submodule update --recursive --remote
# #    - python3 -m pip install --upgrade pip
# #    - pip install -r requirements.txt
# #  script:
# #    - chmod +x ./allurectl
# #    - ./allurectl job-run start --launch-name "${CI_PROJECT_NAME}" || true
# #    - ./allurectl job-run start
# #    - ./allurectl job-run plan --output-file ${ALLURE_TESTPLAN_PATH}
# #    - ./allurectl watch 'pytest'
# #  after_script:
# #    - echo 'Tests finish'
# #  rules:
# #    - if: $CI_PIPELINE_SOURCE != "push"
#
# # Описываю запуск тестов
# wizard:
#   stage: mobile 
#   extends: .tests
#   script:
#     - pytest tests/test_wizard.py
#       
# settings:
#   stage: mobile 
#   extends: .tests
#   script:
#     - pytest tests/test_settings.py
#       
# contacts:
#   stage: mobile 
#   extends: .tests
#   script:
#     - pytest tests/test_contacts.py
#       
# calls:
#   stage: mobile 
#   extends: .tests
#   script:
#     - pytest tests/test_calls.py
#       
# # -------------- остановка работы allure
# #allure-stop:
# #  stage: allure-stop
# #  image: nestandarta/git_python3.8_ubuntu
# #  script:
# #    - chmod +x ./allurectl
# #    - ./allurectl upload ./allure-results
# #    - ./allurectl job-run stop --project-id ${ALLURE_PROJECT_ID} ${ALLURE_JOB_RUN_ID} || true
# #  rules:
# #    - if: $CI_PIPELINE_SOURCE != "push"
# # -------------- копируем историю прогона тестов и размещаем результаты в pages
# # allure_job:
# #   stage: reports
# #   tags:
# #     - docker
# #   image: frankescobar/allure-docker-service
# #   script:
# #     - allure generate -c ./allure-results -o ./allure-report
# #   artifacts:
# #     paths:
# #       - ./allure-results
# #       - ./allure-report
# #     expire_in: 1 day
# #   rules:
# #     - if: $CI_PIPELINE_SOURCE != "push"
#
# # pages:
# #   stage: reports-upload
# #   script:
# #     # - mkdir public
# #     - mv allure-report/ public/
# #     - ls
# #   artifacts:
# #     paths:
# #       - public
# #   rules:
# #     - if: $CI_PIPELINE_SOURCE != "push"
